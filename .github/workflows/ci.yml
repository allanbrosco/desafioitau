name: CI Pipeline

on:
  push:
    branches:
      - main # Executar em push na branch main
  pull_request:
    branches:
      - main # Executar em pull requests na branch main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir a imagem Docker
        run: docker build -t jwt-validation-app .

      - name: üöÄ Rodar a aplica√ß√£o e testar
        run: |
            docker run -d -p 8080:8080 --name jwt-container jwt-validation-app
            sleep 10  # Aguarda a aplica√ß√£o subir
            curl -X POST "http://localhost:8080/api/jwt/validate" -H "Content-Type: application/json" -d '{ \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJTZWVkIjoiNzg0MSIsIk5hbWUiOiJUb25pbmhvIEFyYXVqbyJ9.QY05sIjtrcJnP533kQNk8QXcaleJ1Q01jWY_ZzIZuAg" }'
  deploy:
      needs: build-and-test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

      steps:
        - name: üì• Checkout do reposit√≥rio
          uses: actions/checkout@v3

        - name: üîë Login no Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: üèóÔ∏è Construir e enviar a imagem para o Docker Hub
          run: |
            docker build -t ${{ secrets.DOCKER_USERNAME }}/jwt-validation-app:latest .
            docker push ${{ secrets.DOCKER_USERNAME }}/jwt-validation-app:latest